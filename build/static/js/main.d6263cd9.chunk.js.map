{"version":3,"sources":["components/Note.js","services/noteService.js","components/Notification.js","components/Footer.js","components/App.js","index.js"],"names":["Note","note","toggleImportanceOf","label","important","className","content","onClick","getNotes","a","request","axios","get","response","data","addNote","newObject","post","updateStatus","id","put","Notification","message","Footer","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","useEffect","noteService","then","initialNotes","map","key","find","n","changedNote","catch","setTimeout","onSubmit","event","preventDefault","noteObj","date","Date","toISOString","Math","random","returnedNote","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"wOAYeA,EAVF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,mBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAqBC,K,uCCc7B,GACbK,SAnBY,uCAAG,8BAAAC,EAAA,6DACTC,EAAUC,IAAMC,IAHL,cAEF,SAEQF,EAFR,cAETG,EAFS,yBAGRA,EAASC,MAHD,2CAAH,qDAoBZC,QAdW,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,6DACRC,EAAUC,IAAMM,KATL,aASsBD,GADzB,SAESN,EAFT,cAERG,EAFQ,yBAGPA,EAASC,MAHF,2CAAH,sDAeXI,aATgB,uCAAG,WAAOC,EAAIH,GAAX,iBAAAP,EAAA,6DACbC,EAAUC,IAAMS,IAAN,UAfC,aAeD,YAA2BD,GAAMH,GAD9B,SAEIN,EAFJ,cAEbG,EAFa,yBAGZA,EAASC,MAHG,2CAAH,yDCJHO,EATM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACQ,KAIR,yBAAKjB,UAAU,SAASiB,ICIjBC,EAVA,WACX,OACI,6BACI,6BACA,6EC8EGC,EA9EH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,MAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAMRC,EAAcJ,EAAUJ,EAAQA,EAAMS,QAAO,SAAClC,GAAD,OAAUA,EAAKG,aAElEgC,qBAAU,WACNC,EAAY7B,WAAW8B,MAAK,SAACC,GACzBZ,EAASY,QAEd,IAuCH,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcjB,QAASU,IACvB,6BACI,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BACKI,EAAYM,KAAI,SAACvC,GAAD,OACb,kBAAC,EAAD,CACIwC,IAAKxC,EAAKkB,GACVlB,KAAMA,EACNC,mBAAoB,kBAlCb,SAACiB,GACxB,IAAMlB,EAAOyB,EAAMgB,MAAK,SAACC,GAAD,OAAOA,EAAExB,KAAOA,KAClCyB,EAAW,2BAAO3C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CiC,EACKnB,aAAaC,EAAIyB,GACjBN,MAAK,SAACM,GACHjB,EAASD,EAAMc,KAAI,SAACvC,GAAD,OAAWA,EAAKkB,KAAOA,EAAKlB,EAAO2C,SAEzDC,OAAM,WACHZ,EAAgB,SAAD,OACFhC,EAAKK,QADH,2CAGfwC,YAAW,WACPb,EAAgB,QACjB,KACHN,EAASD,EAAMS,QAAO,SAACQ,GAAD,OAAOA,EAAExB,KAAOA,SAkBJjB,CAAmBD,EAAKkB,WAI9D,0BAAM4B,SAvDE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAU,CACZ5C,QAASsB,EACTuB,MAAM,IAAIC,MAAOC,YACjBjD,UAAWkD,KAAKC,SAAW,IAE/BlB,EAAYtB,QAAQmC,GAASZ,MAAK,SAACkB,GAC/B7B,EAASD,EAAM+B,OAAOD,IACtB3B,EAAW,SA+CP,2BAAO6B,MAAO9B,EAAS+B,SA3CV,SAACX,GACtBnB,EAAWmB,EAAMY,OAAOF,UA2ChB,4BAAQG,KAAK,UAAb,SAEJ,kBAAC,EAAD,QCzEZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d6263cd9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportanceOf }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportanceOf}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\nconst backEndURL = \"/api/notes\";\r\n\r\nconst getNotes = async () => {\r\n  const request = axios.get(backEndURL);\r\n  const response = await request;\r\n  return response.data;\r\n};\r\n\r\nconst addNote = async (newObject) => {\r\n  const request = axios.post(backEndURL, newObject);\r\n  const response = await request;\r\n  return response.data;\r\n};\r\n\r\nconst updateStatus = async (id, newObject) => {\r\n  const request = axios.put(`${backEndURL}/${id}`, newObject);\r\n  const response = await request;\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  getNotes,\r\n  addNote,\r\n  updateStatus,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null){\r\n        return  null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">{message}</div>\r\n    )\r\n}\r\nexport default Notification;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <em>Note app, desinged by Dominik Å»mudziak</em>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import React, {useState, useEffect} from \"react\";\r\nimport Note from \"./Note\";\r\nimport noteService from \"../services/noteService\";\r\nimport Notification from \"./Notification\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState(\"\");\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n    useEffect(() => {\r\n        noteService.getNotes().then((initialNotes) => {\r\n            setNotes(initialNotes);\r\n        });\r\n    }, []);\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault();\r\n        const noteObj = {\r\n            content: newNote,\r\n            date: new Date().toISOString,\r\n            important: Math.random() < 0.5,\r\n        };\r\n        noteService.addNote(noteObj).then((returnedNote) => {\r\n            setNotes(notes.concat(returnedNote));\r\n            setNewNote(\"\");\r\n        });\r\n    };\r\n\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value);\r\n    };\r\n\r\n    const toggleImportanceOf = (id) => {\r\n        const note = notes.find((n) => n.id === id);\r\n        const changedNote = {...note, important: !note.important};\r\n\r\n        noteService\r\n            .updateStatus(id, changedNote)\r\n            .then((changedNote) => {\r\n                setNotes(notes.map((note) => (note.id !== id ? note : changedNote)));\r\n            })\r\n            .catch(() => {\r\n                setErrorMessage(\r\n                    `Note '${note.content}' was already removed from the server.`\r\n                )\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 2000)\r\n                setNotes(notes.filter((n) => n.id !== id));\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage}/>\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? \"important\" : \"all\"}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {notesToShow.map((note) => (\r\n                    <Note\r\n                        key={note.id}\r\n                        note={note}\r\n                        toggleImportanceOf={() => toggleImportanceOf(note.id)}\r\n                    />\r\n                ))}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input value={newNote} onChange={handleNoteChange}/>\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}